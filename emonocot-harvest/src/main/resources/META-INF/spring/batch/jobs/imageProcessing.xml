<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	                    http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">
	                    
    <context:property-placeholder ignore-resource-not-found="true" location="classpath*:META-INF/spring/application.properties,classpath*:META-INF/spring/database.properties,classpath*:META-INF/spring/emonocot-harvest.properties,classpath*:META-INF/spring/emonocot-harvest-db.properties"/>
	<context:annotation-config />

	<batch:job id="ImageProcessing">
	    <batch:description>Processes the images associated with a certain source system</batch:description>	    
		<batch:step id="handleBinaryImages">
			<batch:description>Retrieve images which are not cached, obtain EXIF metadata from the binary files
			  then resize the images
			</batch:description>
			<batch:tasklet>
				<batch:chunk reader="processImageFilesReader" processor="processImageFilesProcessor" writer="itemWriter" skip-limit="1000" commit-interval="10">
				  <batch:skippable-exception-classes>
						<batch:include class="org.apache.sanselan.ImageReadException" />
						<batch:include	class="org.emonocot.job.dwc.exception.DarwinCoreProcessingException" />				
				  </batch:skippable-exception-classes>
				</batch:chunk>			    
			</batch:tasklet>
			<batch:next on="COMPLETED" to="removeAbsentImages"/>			
		</batch:step>
		<batch:step id="removeAbsentImages">
			<batch:description>Remove image files still present on the filesystem which are absent in the database</batch:description>
			<batch:tasklet>
				<batch:chunk reader="imageDirectoryFileReader" processor="imagesPresentProcessor" writer="imageFileDeletingWriter" commit-interval="10">
				</batch:chunk>			    
			</batch:tasklet>
			<batch:end on="COMPLETED"/>
		</batch:step>
	</batch:job>
	
	<bean id="processImageFilesReader" class="org.springframework.batch.item.database.HibernateCursorItemReader" scope="step">
	  <property name="sessionFactory" ref="sessionFactory" />	  
	  <property name="queryString" value="#{jobParameters['query.string']}"/>
	</bean>
	
	<bean id="imageDirectoryFileReader" class="org.emonocot.harvest.common.DirectoryReader">
	  <property name="directoryName" value="${harvester.image.directory}"/>
	</bean>
	
	<bean id="imagesPresentProcessor" class="org.emonocot.harvest.media.ImagePresentProcessor"/>
	
	<bean id="imageFileDeletingWriter" class="org.emonocot.harvest.media.ImageDeletingWriter">
	    <property name="imageDirectory" value="${harvester.image.directory}"/>
	    <property name="thumbnailDirectory" value="${harvester.thumbnail.directory}"/>
	</bean>
	
	<bean id="processImageFilesProcessor" class="org.springframework.batch.item.support.CompositeItemProcessor">
	  <property name="delegates">
	    <list>
	      <ref bean="imageFetchingProcessor"/>
          <ref bean="imageResizer"/>
	      <ref bean="imageThumbnailProcessor"/>
	      <ref bean="imageMetadataProcessor"/>
	    </list>
	  </property>
	</bean>

	<!-- Writing -->
	<bean id="processingExceptionProcessListener" class="org.emonocot.job.dwc.DwCProcessingExceptionProcessListener" scope="step">
	  <property name="sourceName" value="#{jobParameters['authority.name']}"/>
	  <property name="sessionFactory" ref="sessionFactory"/>
	  <property name="transactionManager" ref="transactionManager"/>
	</bean>

	<bean id="itemWriter"
		class="org.springframework.batch.item.database.HibernateItemWriter">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

</beans>
