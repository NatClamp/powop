<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	                    http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">
    <context:property-placeholder location="classpath*:META-INF/spring/*.properties"/>
	<context:annotation-config />

	<batch:job id="IdentificationKeyHarvesting">
	    <batch:description>Harvests a single SDD file containing a multi-access key</batch:description>
	    <batch:step id="setTemporaryFilename">
			<batch:description>Set the temporary file name</batch:description>
			<batch:tasklet ref="setTemporaryFilenameTasklet" />			
			<batch:next on="COMPLETED" to="getIdentificationKey" />
		</batch:step>
		<batch:step id="getIdentificationKey">
			<batch:description>Get the sdd file</batch:description>
			<batch:tasklet ref="getIdentificationKeyTasklet" />
			<batch:next on="NOT MODIFIED" to="cleanupResourcesNotModified" />
			<batch:next on="COMPLETED" to="cleanupResources" />
		</batch:step>
		<batch:step id="cleanupResourcesNotModified">
			<batch:description>Cleanup the resources</batch:description>
			<batch:tasklet ref="resourceDeletingTasklet" />
			<batch:end on="COMPLETE" exit-code="NOT MODIFIED" />
		</batch:step>
		<batch:step id="cleanupResources">
		    <batch:description>Cleanup the resources</batch:description>
			<batch:tasklet ref="resourceDeletingTasklet" />
			<batch:end on="COMPLETED"/>
		</batch:step>
	</batch:job>
	
	<bean id="setTemporaryFilenameTasklet" class="org.emonocot.harvest.common.SetTemporaryFilenameTasklet">
		<property name="harvesterSpoolDirectory" value="${harvester.spool.directory}"/>
	</bean>

	<bean id="resourceDeletingTasklet"
		class="org.emonocot.harvest.common.MultiResourceDeletingTasklet"
		scope="step">
		<property name="resources">
			<bean class="org.springframework.core.io.FileSystemResource"
				scope="step">
				<constructor-arg value="#{jobExecutionContext['temporary.file.name']}" />
			</bean>
		</property>
	</bean>
	
	<bean id="getIdentificationKeyTasklet"
		class="org.springframework.batch.core.step.tasklet.MethodInvokingTaskletAdapter"
		scope="step">
		<property name="targetObject" ref="getResourceClient" />
		<property name="targetMethod" value="getResource" />
		<property name="arguments">
			<list>
				<value>#{jobParameters['authority.name']}</value>
				<value>#{jobParameters['authority.uri']}</value>
				<value>#{jobParameters['authority.last.harvested']}</value>
				<value>#{jobExecutionContext['temporary.file.name']}</value>
			</list>
		</property>
	</bean>

	<bean id="getResourceClient" class="org.emonocot.ws.GetResourceClient">
		<property name="proxyHost" value="${http.proxyHost}" />
		<property name="proxyPort" value="${http.proxyPort}" />
	</bean>
</beans>
