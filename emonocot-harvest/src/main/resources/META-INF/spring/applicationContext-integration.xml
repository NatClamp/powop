<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:integration="http://www.springframework.org/schema/integration"
  xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
  xmlns:util="http://www.springframework.org/schema/util"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jms="http://www.springframework.org/schema/integration/jms"
  xmlns:integration-http="http://www.springframework.org/schema/integration/http"
  xsi:schemaLocation="http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http.xsd
    http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd
    http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/integration/mail http://www.springframework.org/schema/integration/mail/spring-integration-mail.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

  <context:property-placeholder location="classpath*:META-INF/spring/test.properties" order="1" ignore-unresolvable="true" />
  <context:property-placeholder location="classpath*:META-INF/spring/application.properties" order="2" />

  <!-- Integration setup for read write jobs -->
  <bean id="readWriteJobLaunchRequestsQueue" class="org.apache.activemq.command.ActiveMQQueue">
    <constructor-arg value="${amq.readOnlyQueue.name}" />
  </bean>

  <jms:inbound-channel-adapter id="readWriteJobLaunchGateway"	channel="readWriteJobLaunchRequests" destination="readWriteJobLaunchRequestsQueue"	message-converter="mappingMessageConverter" connection-factory="connectionFactory" >
    <integration:poller fixed-rate="30000"/>
  </jms:inbound-channel-adapter>

  <integration:channel id="readWriteJobLaunchRequests" />

  <integration:service-activator input-channel="readWriteJobLaunchRequests" ref="readWriteJobLauncherImpl" method="launch" />

  <bean id="readWriteJobLauncherImpl" class="org.emonocot.harvest.integration.JobLauncherImpl">
    <property name="jobLauncher" ref="readWriteJobLauncher" />
    <property name="jobLocator" ref="jobRegistry" />
    <property name="jobStatusNotifier" ref="jobStatusNotifier"/>
    <property name="baseUrl" value="${harvester.baseUrl}" />
  </bean>

  <!-- Outgoing Read write job launcher -->

  <integration:gateway id="messageBasedReadWriteJobLauncher" service-interface="org.emonocot.api.job.JobLauncher" default-request-channel="outgoingReadWriteJobLaunchRequests">
    <integration:method name="launch" />
  </integration:gateway>

  <integration:channel id="outgoingReadWriteJobLaunchRequests" />

  <jms:outbound-channel-adapter id="outgoingReadWriteJobLaunchGateway" channel="outgoingReadWriteJobLaunchRequests"	destination="readWriteJobLaunchRequestsQueue" connection-factory="connectionFactory" message-converter="mappingMessageConverter"/>

  <!-- Read only job queue -->
  <bean id="readOnlyJobLaunchRequestsQueue" class="org.apache.activemq.command.ActiveMQQueue">
    <constructor-arg value="${amq.readWriteQueue.name}" />
  </bean>

  <jms:inbound-channel-adapter id="readOnlyJobLaunchGateway"
    channel="readOnlyJobLaunchRequests" destination="readOnlyJobLaunchRequestsQueue"
    message-converter="mappingMessageConverter" connection-factory="connectionFactory" >
    <integration:poller fixed-rate="5000"/>
  </jms:inbound-channel-adapter>

  <integration:channel id="readOnlyJobLaunchRequests" />

  <integration:service-activator input-channel="readOnlyJobLaunchRequests" ref="readOnlyJobLauncherImpl" method="launch" />

  <bean id="readOnlyJobLauncherImpl" class="org.emonocot.harvest.integration.JobLauncherImpl">
    <property name="jobLauncher" ref="jobLauncher" />
    <property name="jobLocator" ref="jobRegistry" />
    <property name="jobStatusNotifier" ref="jobStatusNotifier"/>
    <property name="baseUrl" value="${harvester.baseUrl}" />
  </bean>

  <integration:channel id="indexingChannel"/>

  <!-- Generic logging at INFO level for channels -->
  <integration:publish-subscribe-channel id="loggingChannel" />
  <integration:logging-channel-adapter channel="loggingChannel" log-full-message="true" level="DEBUG" />

  <!-- Generic message converter used by both queues -->
  <bean id="mappingMessageConverter"
    class="org.springframework.jms.support.converter.MappingJackson2MessageConverter">
    <property name="objectMapper" ref="objectMapper" />
    <property name="typeIdPropertyName" value="javaType" />
    <property name="typeIdMappings">
      <map>
        <entry>
          <key>
            <value>JobLaunchRequest</value>
          </key>
          <value>org.emonocot.api.job.JobLaunchRequest</value>
        </entry>
        <entry>
          <key>
            <value>JobExecutionInfo</value>
          </key>
          <value>org.emonocot.api.job.JobExecutionInfo</value>
        </entry>
      </map>
    </property>
  </bean>

  <bean id="emailServiceHelper" class="org.emonocot.harvest.integration.EmailServiceHelper">
    <property name="templates">
      <map>
        <entry key="resource" value="org/emonocot/integration/comment/ResourceEmail.vm" />
      </map>
    </property>
    <property name="defaultTemplateName" value="comment" />
    <property name="userService" ref="userServiceImpl"/>
    <property name="commentService" ref="commentServiceImpl"/>
  </bean>

</beans>
