<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

	<batch:job id="SpeciesPageHarvestingJob">
		<batch:step id="getXMLDoc">
			<batch:tasklet ref="getXMLDocTasklet" />
			<batch:end on="NOT MODIFIED" exit-code="NOT MODIFIED"/>
			<batch:next on="COMPLETED" to="processXMLDoc" />
		</batch:step>
		<batch:step id="processXMLDoc">
			<batch:tasklet>
				<batch:chunk reader="itemReader" processor="itemProcessor" writer="itemWriter" commit-interval="10"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
    <bean id="getXMLDocTasklet"
	      class="org.springframework.batch.core.step.tasklet.MethodInvokingTaskletAdapter"
	      scope="step">
	  <property name="targetObject" ref="getXMLDocClient" />
	  <property name="targetMethod" value="getDocument" />
	  <property name="arguments">
		<list>
			<value>#{jobParameters['authority.name']}</value>
			<value>#{jobParameters['authority.uri']}</value>
			<value>#{jobParameters['authority.last.harvested']}</value>
			<value>#{jobParameters['temporary.file.name']}</value>
		</list>
	  </property>
    </bean>
    
    <bean id="getXMLDocClient" class="org.emonocot.ws.scratchpads.GetXMLDocClient" />

	<bean id="itemReader" class="org.springframework.batch.item.xml.StaxEventItemReader"
		  scope="step">
		<property name="fragmentRootElementName" value="taxon" />
		<property name="resource">
		  <bean class="org.springframework.core.io.FileSystemResource" scope="step">
		   <constructor-arg value="#{jobParameters['temporary.file.name']}"/>
		  </bean>
		</property>
		<property name="unmarshaller" ref="eolTransferSchemaUnmarshaller" />
	</bean>
	
	<bean id="eolTransferSchemaUnmarshaller" class="org.springframework.oxm.xstream.AnnotationXStreamMarshaller">
	  <property name="streamDriver" ref="eolTransferSchemaStreamDriver" />
	  <property name="annotatedClass" value="org.emonocot.job.scratchpads.model.EoLTaxonItem"/>
    </bean>

	<bean id="eolTransferSchemaStreamDriver" class="com.thoughtworks.xstream.io.xml.StaxDriver">
		<constructor-arg ref="eolTransferSchemaQNameMap" />
	</bean>

	<bean id="eolTransferSchemaQNameMap"
		  class="org.emonocot.job.scratchpads.EoLTransferSchemaQNameMapFactory" />

	<bean id="itemProcessor"
		class="org.springframework.batch.item.support.CompositeItemProcessor">
		<property name="delegates">
			<list>
				<ref bean="taxonItemValidator"/>
				<bean class="org.emonocot.job.scratchpads.EoLTaxonItemProcessor"/>
			</list>
		</property>
	</bean>
	
	<bean id="taxonItemValidator" class="org.emonocot.job.scratchpads.EoLTaxonItemValidator"
		scope="step">
		<property name="authority" value="#{jobParameters['authority.name']}" />
	</bean>
	
	<bean id="itemWriter" class="org.springframework.batch.item.database.HibernateItemWriter">
	  <property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="conversionService"
      class="org.springframework.context.support.ConversionServiceFactoryBean">
      <property name="converters">
        <list>
            <ref bean="taxonItemConverter" />
            <ref bean="textDataConverter" />
            <ref bean="imageConverter" />
            <ref bean="referenceConverter" />
            <ref bean="featureConverter" />
            <ref bean="licenseConverter" />
            <ref bean="dateTimeConverter" />
        </list>
      </property>
    </bean>
    
    <bean name="taxonItemConverter" class="org.emonocot.job.scratchpads.convert.EoLTaxonItemConverter"/>
    <bean name="imageConverter" class="org.emonocot.job.scratchpads.convert.EoLStillImageDataObjectConverter"/>
    <bean name="textDataConverter" class="org.emonocot.job.scratchpads.convert.EoLTextDataObjectConverter"/>
    <bean name="referenceConverter" class="org.emonocot.job.scratchpads.convert.EoLReferenceConverter"/>
    
    <bean name="featureConverter" class="org.emonocot.job.scratchpads.convert.FeatureConverter"/>
    <bean name="licenseConverter" class="org.emonocot.job.scratchpads.convert.LicenseConverter"/>
    <bean name="dateTimeConverter" class="org.emonocot.job.scratchpads.convert.UnixTimeConverter"/>

    <bean name="taxonService" class="org.emonocot.service.impl.TaxonServiceImpl"/>
    <bean name="descriptionService" class="org.emonocot.service.impl.DescriptionServiceImpl"/>
</beans>
