<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:integration="http://www.springframework.org/schema/integration"
	xmlns:http="http://www.springframework.org/schema/integration/http"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http.xsd">

    <context:property-placeholder location="classpath*:META-INF/spring/*.properties"/>
    
    <!-- 
      Copied from spring-batch-admin-manager.jar/META-INF/spring/batch/bootstrap/manager/jmx-context.xml
      Since we need to deploy multiple harvester applications (potentially) within the same instance of tomcat 
    -->
    <context:mbean-server id="mbeanServer" />

	<context:mbean-export default-domain="${webAppRootKey}" server="mbeanServer" />

	<bean id="batchMBeanExporter" class="org.springframework.batch.admin.jmx.BatchMBeanExporter">
		<property name="server" ref="mbeanServer" />
		<property name="jobService">
			<bean class="org.springframework.aop.framework.ProxyFactoryBean">
				<property name="target" ref="jobService" />
				<property name="interceptorNames" value="cacheInterceptor" />
			</bean>
		</property>
		<property name="defaultDomain" value="${webAppRootKey}" />
	</bean>

	<bean id="cacheInterceptor" class="org.springframework.batch.admin.util.SimpleEhCacheInterceptor" />
    
    <import resource="classpath*:/META-INF/spring/batch/bootstrap/manager/execution-context.xml" />
    <import resource="classpath*:/META-INF/spring/batch/servlet/manager/controller-context.xml"/>
    <!-- 
      Copied from spring-batch-admin-manager.jar/META-INF/spring/batch/servlet/manager/integration-context.xml
      Since we want to return responses as json
    -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<bean id="reload-job-executions" class="org.springframework.web.servlet.view.RedirectView">
		<property name="url" value="#{resourceService.servletPath}/jobs/executions" />
		<property name="contextRelative" value="true" />
	</bean>

	<integration:channel id="job-info" />

	<integration:transformer input-channel="job-operator" output-channel="job-info">
		<bean class="org.springframework.batch.admin.integration.JobExecutionToInfoAdapter" />
	</integration:transformer>

	<http:inbound-gateway name="/job-requests.json" request-channel="job-launches" reply-channel="job-info"
		view-name="jobs/customExecution.json" reply-key="jobExecutionInfo" />
   
    <bean name="jobs/customExecution.json" parent="standard.json">
		<property name="attributes">
			<props merge="true">
				<prop key="body">/manager/jobs/json/customExecution.ftl</prop>
				<prop key="titleCode">job.execution.title</prop>
				<prop key="titleText">Spring Batch Admin: Job Execution</prop>
				<prop key="baseUrl">${harvester.baseUrl}</prop>
			</props>
		</property>
	</bean>

	<http:inbound-gateway name="/job-restarts.json" request-channel="job-restarts" reply-channel="job-info"
		view-name="jobs/execution" reply-key="jobExecutionInfo" />

	<bean name="redirect:jobs" class="org.springframework.web.servlet.view.RedirectView">
		<property name="url" value="#{resourceService.servletPath}/jobs" />
		<property name="contextRelative" value="true" />
	</bean>

	<bean name="redirect:jobs.json" class="org.springframework.web.servlet.view.RedirectView">
		<property name="url" value="#{resourceService.servletPath}/jobs.json" />
		<property name="contextRelative" value="true" />
	</bean>

	<integration:channel id="job-configuration-multipart" />

	<integration:transformer id="multipartToJobConfigurationRequest" input-channel="job-configuration-multipart"
		output-channel="job-configuration-requests">
		<bean class="org.springframework.batch.admin.integration.MultipartToJobConfigurationRequestTransformer" />
	</integration:transformer>

	<http:inbound-channel-adapter name="/job-configuration" channel="job-configuration-multipart"
		request-payload-type="org.springframework.batch.admin.integration.MultipartJobConfigurationRequest" view-name="redirect:jobs"
		supported-methods="POST" message-converters="multipartJobConfigurationRequestHttpMessageConverter" />

	<http:inbound-gateway name="/job-configuration.json" request-channel="job-configurations"
		reply-key="jobs" reply-channel="job-registrations" request-payload-type="org.springframework.core.io.Resource"
		view-name="jobs" supported-methods="POST" message-converters="resourceHttpMessageConverter" />

	<http:inbound-gateway name="/file-upload.json" request-channel="file-uploads" reply-key="files"
		request-payload-type="java.lang.String" view-name="files" supported-methods="POST" />

	<bean id="resourceHttpMessageConverter" class="org.springframework.http.converter.ResourceHttpMessageConverter" />

	<bean id="multipartJobConfigurationRequestHttpMessageConverter" class="org.springframework.batch.admin.web.BindingHttpMessageConverter">
		<property name="targetType" value="org.springframework.batch.admin.integration.MultipartJobConfigurationRequest" />
	</bean>

	<integration:service-activator input-channel="file-uploads">
		<bean class="org.springframework.batch.admin.integration.StringToFileAdapter">
			<property name="fileService" ref="fileService" />
		</bean>
	</integration:service-activator>
    <import resource="classpath*:/META-INF/spring/batch/servlet/manager/manager-context.xml"/>
    <import resource="classpath*:/META-INF/spring/batch/servlet/resources/resources-context.xml"/>
    <import resource="classpath*:/META-INF/spring/batch/bootstrap/integration/configuration-context.xml"/>
    <import resource="classpath*:/META-INF/spring/batch/bootstrap/integration/file-context.xml"/>
    <import resource="classpath*:/META-INF/spring/batch/bootstrap/integration/launcher-context.xml"/>
    <import resource="classpath*:/META-INF/spring/batch/bootstrap/integration/restart-context.xml"/>
    <import resource="classpath*:/META-INF/spring/batch/bootstrap/resources/resources-context.xml"/>
    
</beans>
