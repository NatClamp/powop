<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	                    http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

	<context:component-scan base-package="org.emonocot">
		<context:exclude-filter type="assignable"
			expression="org.emonocot.api.JobInstanceService" />
		<context:exclude-filter type="assignable"
			expression="org.emonocot.api.JobExecutionService" />
		<context:exclude-filter type="assignable"
			expression="org.emonocot.persistence.dao.JobExecutionDao" />
		<context:exclude-filter type="assignable"
			expression="org.emonocot.persistence.dao.JobInstanceDao" />
	</context:component-scan>

	<context:annotation-config />

	<bean name="jobLauncherTestUtils" class="org.springframework.batch.test.JobLauncherTestUtils">
		<property name="jobRepository" ref="jobRepository" />
		<property name="jobLauncher" ref="jobLauncher" />
	</bean>

	<bean id="conversionService"
		class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="org.emonocot.model.geography.GeographyConverter" />
				<bean class="org.emonocot.model.reference.ReferenceTypeConverter" />
				<bean class="org.emonocot.model.taxon.TaxonomicStatusConverter" />
				<bean class="org.emonocot.model.taxon.RankConverter" />
			</list>
		</property>
	</bean>

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<bean name="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean" />

	<bean
		class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
		<property name="jobRegistry" ref="jobRegistry" />
	</bean>

	<bean id="jobRegistry"
		class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

    <bean id="nameParser" class="org.gbif.ecat.parser.NameParser" />
    <bean id="taxonMatcher" class="org.emonocot.job.taxonmatch.DefaultTaxonMatcher" />

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
	  <property name="requestFactory" ref="requestFactory"/>
	  <property name="messageConverters">
	    <list>
	      <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
	        <property name="objectMapper" ref="objectMapper"/>
	      </bean>
	    </list>
	  </property>
	</bean>
	
	<bean name="objectMapper" class="org.emonocot.model.marshall.json.CustomObjectMapperFactory"/>
	     
	<beans profile="default">
	    <bean id="requestFactory" class="org.springframework.http.client.SimpleClientHttpRequestFactory"/>
		<bean name="dataSource"
			class="org.emonocot.persistence.spatial.GeoDBTestDataSourceFactory">
			<property name="testDatabaseName" value="testdb" />
			<property name="schemaLocations">
				<list>
					<value>classpath:/org/springframework/batch/core/schema-drop-h2.sql
					</value>
					<value>classpath:/org/springframework/batch/core/schema-h2.sql
					</value>
					<value>classpath:/META-INF/database/H2_schema.ddl</value>
				</list>
			</property>
			<property name="testDataLocation" value="classpath:META-INF/database/test_data.sql" />
		</bean>

		<bean id="sessionFactory"
			class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="hibernateProperties">
				<value>
					hibernate.dialect=org.hibernatespatial.geodb.GeoDBDialect
					hibernate.hbm2ddl.auto=validate
					hibernate.search.default.directory_provider=filesystem
					hibernate.search.default.indexBase=./target/indexes
				</value>
			</property>
			<property name="annotatedClasses">
				<list>
				    <value>org.emonocot.model.job.Job</value>
					<value>org.emonocot.model.source.Source</value>
					<value>org.emonocot.model.identifier.Identifier</value>
					<value>org.emonocot.model.common.Annotation</value>
					<value>org.emonocot.model.description.Distribution</value>
					<value>org.emonocot.model.description.TextContent</value>
					<value>org.emonocot.model.media.Image</value>
					<value>org.emonocot.model.reference.Reference</value>
					<value>org.emonocot.model.taxon.Taxon</value>
					<value>org.emonocot.model.user.User</value>
					<value>org.emonocot.model.user.Group</value>
				</list>
			</property>
			<property name="annotatedPackages" value="org.emonocot.model.common" />
		</bean>
	</beans>
	<beans profile="proxy">
      <bean id="requestFactory" class="org.springframework.http.client.SimpleClientHttpRequestFactory">
        <property name="proxy">
          <bean class="java.net.Proxy">
            <constructor-arg value="#{T(java.net.Proxy$Type).HTTP}"/>
            <constructor-arg>
              <bean class="java.net.InetSocketAddress">
                <constructor-arg value="${http.proxyHost}"/>
                <constructor-arg value="${http.proxyPort}"/>
              </bean>
            </constructor-arg>
          </bean>
        </property>
      </bean>
	</beans>   
	<beans profile="mysql">
		<context:property-placeholder
			ignore-unresolvable="true" location="classpath*:META-INF/spring/*.properties" />
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver.classname}" />
			<property name="url" value="${jdbc.driver.url}" />
			<property name="username" value="${jdbc.driver.username}" />
			<property name="password" value="${jdbc.driver.password}" />
			<property name="initialSize" value="8" />
			<property name="maxActive" value="20" />
			<property name="maxIdle" value="10" />
			<property name="minIdle" value="1" />
			<property name="maxWait" value="10000" />
			<property name="removeAbandoned" value="true" />
			<property name="removeAbandonedTimeout" value="300" />
			<property name="logAbandoned" value="true" />
			<property name="defaultAutoCommit" value="true" />
			<property name="defaultReadOnly" value="false" />
			<property name="validationQuery" value="SELECT 1" />
			<property name="timeBetweenEvictionRunsMillis" value="60000" />
			<property name="minEvictableIdleTimeMillis" value="30000" />
			<property name="numTestsPerEvictionRun" value="3" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnReturn" value="true" />
			<property name="testOnBorrow" value="true" />
			<property name="defaultTransactionIsolation" value="2" />
		</bean>
		<bean id="sessionFactory"
			class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="hibernateProperties">
				<value>
					hibernate.dialect=org.hibernatespatial.mysql.MySQLSpatialDialect
					hibernate.hbm2ddl.auto=validate
					hibernate.search.default.directory_provider=filesystem
					hibernate.search.default.indexBase=./target/indexes
				</value>
			</property>
			<property name="annotatedClasses">
				<list>
					<value>org.emonocot.model.source.Source</value>
					<value>org.emonocot.model.common.Annotation</value>
					<value>org.emonocot.model.description.Distribution</value>
					<value>org.emonocot.model.description.TextContent</value>
					<value>org.emonocot.model.media.Image</value>
					<value>org.emonocot.model.reference.Reference</value>
					<value>org.emonocot.model.taxon.Taxon</value>
					<value>org.emonocot.model.user.User</value>
					<value>org.emonocot.model.user.Group</value>
				</list>
			</property>
			<property name="annotatedPackages" value="org.emonocot.model.common" />
		</bean>
		<jdbc:initialize-database data-source="dataSource"
			enabled="${jdbc.initialize.database}">
			<jdbc:script location="classpath:META-INF/database/test_data.sql" />
		</jdbc:initialize-database>
		
	</beans>
</beans>
