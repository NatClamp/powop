<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<context:annotation-config />
	<context:component-scan base-package="org.emonocot">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="assignable" expression="org.emonocot.portal.remoting.DaoImpl"/>
		<context:exclude-filter type="assignable" expression="org.emonocot.portal.remoting.JobExecutionDaoImpl"/>
		<context:exclude-filter type="assignable" expression="org.emonocot.portal.remoting.JobInstanceDaoImpl"/>
		<context:exclude-filter type="assignable" expression="org.emonocot.portal.remoting.RemoteUserServiceImpl"/>
		<context:exclude-filter type="assignable" expression="org.emonocot.portal.remoting.RemoteGroupServiceImpl"/>
	</context:component-scan>

	<tx:annotation-driven />
	
	<bean name="customObjectMapper"	class="org.emonocot.model.marshall.json.CustomObjectMapperFactory">
		<property name="referenceService" ref="referenceServiceImpl" />
		<property name="taxonService" ref="taxonServiceImpl" />
		<property name="imageService" ref="imageServiceImpl" />
		<property name="groupService" ref="groupServiceImpl" />
		<property name="userService" ref="userServiceImpl" />
		<property name="sourceService" ref="sourceServiceImpl" />
		<property name="identificationKeyService" ref="identificationKeyServiceImpl" />
		<property name="jobInstanceService" ref="jobInstanceServiceImpl" />
	</bean>
	
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<property name="targetConnectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="${amq.broker.uri}" />
			</bean>
		</property>
		<property name="sessionCacheSize" value="10" />
		<property name="cacheProducers" value="false" />
	</bean>

	<bean name="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean name="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=${hibernate.dialect}
				hibernate.hbm2ddl.auto=validate
                hibernate.validator.autoregister_listeners=false				
			</value>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>org.emonocot.model.Job</value>
				<value>org.emonocot.model.Source</value>
				<value>org.emonocot.model.Identifier</value>
				<value>org.emonocot.model.IdentificationKey</value>
				<value>org.emonocot.model.Annotation</value>
				<value>org.emonocot.model.Distribution</value>
				<value>org.emonocot.model.Description</value>
				<value>org.emonocot.model.Image</value>
				<value>org.emonocot.model.MeasurementOrFact</value>
				<value>org.emonocot.model.Reference</value>
				<value>org.emonocot.model.Taxon</value>
				<value>org.emonocot.model.TypeAndSpecimen</value>
				<value>org.emonocot.model.VernacularName</value>
				<value>org.emonocot.model.auth.User</value>
				<value>org.emonocot.model.auth.Group</value>
				<value>org.emonocot.model.geography.Place</value>
			</list>
		</property>
		<property name="eventListeners">
      	  <map>        	
      	    <entry key="post-insert" value-ref="solrIndexingListener" />
      	    <entry key="post-update" value-ref="solrIndexingListener" />
            <entry key="post-delete" value-ref="solrIndexingListener" />
      	  </map>
    	</property>	
		<property name="annotatedPackages" value="org.emonocot.model"/>
	</bean>
	
	<bean id="solrIndexingListener" class="org.emonocot.persistence.hibernate.SolrIndexingListener">
	  <property name="solrServer" ref="solrServer"/>
	  <property name="geographicalRegionFactory" ref="geographicalRegionFactory"/>
	</bean>
	
	<bean id="geographicalRegionFactory" class="org.emonocot.model.geography.GeographicalRegionFactoryImpl"
	    init-method="afterPropertiesSet" destroy-method="destroy">
	    <property name="spatialIndexingEnabled" value="false"/>
	    <property name="baseDirectory" value="${tdwg.shapefiles.location}/org/tdwg/geography/"/>
	</bean>

	<bean id="solrServer" class="org.apache.solr.client.solrj.impl.HttpSolrServer"  destroy-method="shutdown">
		<constructor-arg value="${solr.url}"/>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver.classname}" />
		<property name="url" value="${jdbc.driver.url}" />
		<property name="username" value="${jdbc.driver.username}" />
		<property name="password" value="${jdbc.driver.password}" />
		<property name="initialSize" value="8" />
		<property name="maxActive" value="20" />
		<property name="maxIdle" value="10" />
		<property name="minIdle" value="1" />
		<property name="maxWait" value="10000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="300" />
		<property name="logAbandoned" value="true" />
		<property name="defaultAutoCommit" value="true" />
		<property name="defaultReadOnly" value="false" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="30000" />
		<property name="numTestsPerEvictionRun" value="3" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testOnBorrow" value="true" />
		<property name="defaultTransactionIsolation" value="2" />
	</bean>
	<beans profile="default">
	    <context:property-placeholder location="classpath:META-INF/spring/application.properties" />
	    <context:property-override location="classpath:META-INF/spring/application.properties" ignore-unresolvable="true"/>
	    <bean id="messageSource"
			class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
			<property name="basenames">
				<list>
					<value>WEB-INF/i18n/messages</value>
					<value>WEB-INF/i18n/application</value>
				</list>
			</property>
			<property name="useCodeAsDefaultMessage" value="true" />
		</bean>
	</beans>
	<beans profile="local">
	    <context:property-placeholder location="classpath:META-INF/spring/local.properties" />
	    <context:property-override location="classpath:META-INF/spring/local.properties" ignore-unresolvable="true"/>
	    <bean id="messageSource"
			class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
			<property name="basenames">
				<list>
					<value>WEB-INF/i18n/messages</value>
					<value>WEB-INF/i18n/local</value>
				</list>
			</property>
			<property name="useCodeAsDefaultMessage" value="true" />
		</bean>
	</beans>
</beans>
