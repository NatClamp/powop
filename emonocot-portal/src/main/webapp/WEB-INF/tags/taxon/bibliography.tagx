<jsp:root xmlns:jsp="http://java.sun.com/JSP/Page"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:em="http://e-monocot.org/portal/functions"
	xmlns:spring="http://www.springframework.org/tags"
	xmlns:tags="urn:jsptagdir:/WEB-INF/tags" version="2.0"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions">
	<jsp:directive.attribute name="refViewType"	type="java.lang.String" required="true" />
	
	<c:set var="bibliography" value="${em:bibliography(taxon)}" />
	<c:if test="${not empty bibliography}">
	<c:if test="${not empty bibliography.references}">
		<c:set var ="filteredRefList" value="${em:filterNameRef(bibliography, refViewType)}" />
		<c:if test="${not empty filteredRefList}">
			<h2>

					<i class="glyphicons-icon book">&#160;</i><spring:message code="is${refViewType}In"/>
					
					<span class="dropdown pull-right">
	  				<button class="btn btn-default dropdown-toggle pull-right" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
	    				Sort By
	    			<span class="caret"></span>
	  				</button>	  			
  					<ul class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenu2">
	   					<li><a id="${refViewType}_sortByDate">Date (Oldest First)</a></li>
	   				 	<li><a id="${refViewType}_sortByDateRev">Date (Newest First)</a></li>
	    				<li><a id="${refViewType}_sortByAuthor">Author (A-Z)</a></li>
	    				<li><a id="${refViewType}_sortByAuthorRev">Author (Z-A)</a></li>
	    				<c:if test="${refViewType eq 'Synonym' }">
	    					<li><a id="${refViewType}_sortByAcceptedName">Accepted Name (A-Z)</a></li>
	    					<li><a id="${refViewType}_sortByAcceptedNameRev">Accepted Name (Z-A)</a></li>
	    				</c:if>	
				 	</ul>
			
 
				</span>	
			</h2>
				<ul id="${refViewType}list" class="unstyled">
				<c:forEach var="reference" items="${em:sortReferencesByDate(filteredRefList)}">
					<li>												
						<c:set var="citationKey" value="${em:citekey(bibliography,reference)}"/>
						<a id="citation${citationKey}">[${citationKey}]</a>
						<c:choose>
							<c:when test="${not empty reference.uri}">
							<c:choose>
								<c:when test="${refViewType eq 'Synonym' }">
									<a href="${reference.uri}">${reference.bibliographicCitation}(${reference.taxonRemarks})</a>
								</c:when>
								<c:otherwise>
								<a href="${reference.uri}">${reference.bibliographicCitation}</a>
								</c:otherwise>
							</c:choose>
							</c:when>
						<c:otherwise>
							<c:choose>
								<c:when test="${refViewType eq 'Synonym' }">
									${reference.bibliographicCitation} (${reference.taxonRemarks})
								</c:when>
								<c:otherwise>
									${reference.bibliographicCitation}
								</c:otherwise>
							</c:choose>
						</c:otherwise>
					</c:choose>
					</li>
				</c:forEach>
			</ul>
			
			<script type="text/javascript">
			
			if (typeof referenceLists === 'undefined') {
				var referenceLists = {};
			}
			
			<c:set var="bibliography" value="${em:bibliography(taxon)}" />
			
			
			<c:set var ="filteredRefList" value="${em:filterNameRef(bibliography, refViewType)}" />
			
			var RefByAuthorList = new Array();
			<c:forEach var="reference" items="${em:sortReferencesByAuthor(filteredRefList)}">
				<c:set var="citationKey" value="${em:citekey(bibliography,reference)}"/>
				<c:choose>
					<c:when test="${not empty reference.uri}">
					if("${refViewType}" == 'Synonym'){
						RefByAuthorList.push('<li><a id="citation${citationKey}">&#91;${citationKey}&#93;</a><a href="${reference.uri}">${em:escapeHtml(reference.bibliographicCitation)} &#40;${em:escapeHtml(reference.taxonRemarks)}&#41;</a></li>');
					}else{
						RefByAuthorList.push('<li><a id="citation${citationKey}">&#91;${citationKey}&#93;</a><a href="${reference.uri}">${em:escapeHtml(reference.bibliographicCitation)}</a></li>');
					}
					</c:when>
					<c:otherwise>
					if("${refViewType}" == 'Synonym'){
						RefByAuthorList.push('<li><a id="citation${citationKey}">&#91;${citationKey}&#93;</a>${em:escapeHtml(reference.bibliographicCitation)} &#40;${em:escapeHtml(reference.taxonRemarks)}&#41;</li>');
					}else{
						RefByAuthorList.push('<li><a id="citation${citationKey}">&#91;${citationKey}&#93;</a>${em:escapeHtml(reference.bibliographicCitation)}</li>');
					}
					</c:otherwise>
				</c:choose>
			</c:forEach>
			referenceLists["${refViewType}_RefByAuthorList"] = RefByAuthorList;
			
			
			var RefByDateList = new Array();
			<c:forEach var="reference" items="${em:sortReferencesByDate(filteredRefList)}">
				<c:set var="citationKey" value="${em:citekey(bibliography,reference)}"/>
				<c:choose>
					<c:when test="${not empty reference.uri}">
					if("${refViewType}" == 'Synonym'){
						RefByDateList.push('<li><a id="citation${citationKey}">&#91;${citationKey}&#93;</a><a href="${reference.uri}">${em:escapeHtml(reference.bibliographicCitation)} &#40;${em:escapeHtml(reference.taxonRemarks)}&#41;</a></li>');
					}else{
						RefByDateList.push('<li><a id="citation${citationKey}">&#91;${citationKey}&#93;</a><a href="${reference.uri}">${em:escapeHtml(reference.bibliographicCitation)}</a></li>');
					}
					</c:when>
					<c:otherwise>
					if("${refViewType}" == 'Synonym'){
						RefByDateList.push('<li><a id="citation${citationKey}">&#91;${citationKey}&#93;</a>${em:escapeHtml(reference.bibliographicCitation)} &#40;${em:escapeHtml(reference.taxonRemarks)}&#41;</li>');
					}else{
						RefByDateList.push('<li><a id="citation${citationKey}">&#91;${citationKey}&#93;</a>${em:escapeHtml(reference.bibliographicCitation)}</li>');
					}
					</c:otherwise>
				</c:choose>
			</c:forEach>
			referenceLists["${refViewType}_RefByDateList"] = RefByDateList;
			
			if("${refViewType}" == 'Synonym'){
			var RefByAcceptedNameList = new Array();
			<c:forEach var="reference" items="${em:sortReferencesByAcceptedName(filteredRefList)}">
				<c:set var="citationKey" value="${em:citekey(bibliography,reference)}"/>
				<c:choose>
					<c:when test="${not empty reference.uri}">
					RefByAcceptedNameList.push('<li><a id="citation${citationKey}">&#91;${citationKey}&#93;</a><a href="${reference.uri}">${em:escapeHtml(reference.bibliographicCitation)} &#40;${em:escapeHtml(reference.taxonRemarks)}&#41;</a></li>');
					</c:when>
					<c:otherwise>
					RefByAcceptedNameList.push('<li><a id="citation${citationKey}">&#91;${citationKey}&#93;</a>${em:escapeHtml(reference.bibliographicCitation)} &#40;${em:escapeHtml(reference.taxonRemarks)}&#41;</li>');
					</c:otherwise>
				</c:choose>
			</c:forEach>
			referenceLists["${refViewType}_RefByAcceptedNameList"] = RefByAcceptedNameList;
			}
						
				$('#${refViewType}_sortByDate').on("click", function(event) {
						event.preventDefault();
						$('#${refViewType}list').html(referenceLists["${refViewType}_RefByDateList"].join(""));
					});
			
				$('#${refViewType}_sortByDateRev').on("click", function(event) {
					event.preventDefault();
					$('#${refViewType}list').html(referenceLists["${refViewType}_RefByDateList"].reverse().join(""));
				});
				
				$('#${refViewType}_sortByAuthor').on("click", function(event) {
					event.preventDefault();
					$('#${refViewType}list').html(referenceLists["${refViewType}_RefByAuthorList"].join(""));
					}
				);
				
				$('#${refViewType}_sortByAuthorRev').on("click", function(event) {
					event.preventDefault();
					$('#${refViewType}list').html(referenceLists["${refViewType}_RefByAuthorList"].reverse().join(""));
					}
				);
				
				if("${refViewType}" == 'Synonym'){
					
					$('#${refViewType}_sortByAcceptedName').on("click", function(event) {
						event.preventDefault();
						$('#${refViewType}list').html(referenceLists["${refViewType}_RefByAcceptedNameList"].join(""));
						}
					);
					
					$('#${refViewType}_sortByAcceptedNameRev').on("click", function(event) {
						event.preventDefault();
						$('#${refViewType}list').html(referenceLists["${refViewType}_RefByAcceptedNameList"].reverse().join(""));
						}
					);
					}
				
		
			</script>
		</c:if>
	</c:if>
	</c:if>
</jsp:root>