<?xml version="1.0" encoding="UTF-8" ?>
<div xmlns:jsp="http://java.sun.com/JSP/Page"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:em="http://e-monocot.org/portal/functions"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:tags="urn:jsptagdir:/WEB-INF/tags"
	xmlns:geo="urn:jsptagdir:/WEB-INF/tags/geo"
	xmlns:spring="http://www.springframework.org/tags" version="2.0">
	<tags:pageheader>
		<c:url value="/css/images/glyphicons/fullsize/glyphicons_001_leaf.png"
			var="taxonIconUrl" />
		<h2 id="page-title">
			<img src="${taxonIconUrl}" class="pull-left noPrint header-icon"
				alt="Taxon" /> <span class="taxonName">${taxon.name}</span>
			${taxon.authorship}
		</h2>
		<c:if test="${taxon.protologue != null}">
			<c:set var="protologLink" value="${em:protologLink(taxon)}" />
			<c:choose>
				<c:when test="${protologLink != null}">
					<small id="protologue"> <a
						href="${protologLink.identifier}"
						title="${fn:escapeXml(protologLink.title)}">${taxon.protologue.title}
							${taxon.protologue.volume}${taxon.protologueMicroReference}
							${taxon.protologue.datePublished}</a>
					</small>
				</c:when>
				<c:otherwise>
					<small id="protologue">${taxon.protologue.title}
						${taxon.protologue.volume}${taxon.protologueMicroReference}
						${taxon.protologue.datePublished}</small>
				</c:otherwise>
			</c:choose>
		</c:if>
	</tags:pageheader>

	<div class="container">
		<c:set var="bibliography" value="${em:bibliography(taxon)}" />
		<header class="subhead clearfix" id="overview">
			<c:if
				test="${not empty taxon.images or not empty taxon.content or not empty em:regions(taxon) or not empty taxon.children or not empty taxon.synonyms or not empty bibliography.references}">
				<div class="subnav noPrint">
					<ul class="nav nav-pills">
						<li><c:if test="${not empty taxon.images}">
								<a href="#images"><spring:message code="images" /></a>
							</c:if></li>
						<li><c:if test="${not empty taxon.content}">
								<a href="#textContent"><spring:message code="description" /></a>
							</c:if></li>
						<li><c:if test="${not empty em:regions(taxon)}">
								<a href="#map"><spring:message code="distributionMap" /></a>
							</c:if></li>
						<li><c:if test="${not empty taxon.children}">
								<a href="#children"><spring:message code="children" /></a>
							</c:if></li>
						<li><c:if test="${not empty taxon.synonyms}">
								<a href="#synonyms"><spring:message code="synonyms" /></a>
							</c:if></li>
						<li><c:if test="${not empty bibliography.references}">
								<a href="#bibliography"><spring:message code="bibliography" /></a>
							</c:if></li>
					</ul>
				</div>
			</c:if>
		</header>
		<c:if test="${not empty taxon.images}">
			<div class="container">
			<div id="gallery" data-toggle="modal-gallery" data-target="#modal-gallery">
				<div class="row">
					<div class="span12">
						<div class="carousel jcarousel span12" id="myCarousel">
							<div class="carousel-inner">
								<div class="item active">
									<div class="row">
										<c:forEach var="image" items="${taxon.images}"
											varStatus="status">
											<div class="span2">
												<div class="thumbnail">
													<a href="${image.url}" rel="gallery" title="${em:stripXml(image.caption)}">
														<c:url var="thumbnail" value="/images/thumbnails/${image.identifier}.${image.format}" />
														<c:url var="url" value="/image/${image.identifier}" />
														<img src="${thumbnail}" class="${status.index}" title="${em:stripXml(image.caption)}" ad-href="${url}" />
													</a>
												</div>
											</div>
										</c:forEach>
									</div>
								</div>
							</div>
							<c:if test="${fn:length(taxon.images) > 6 }">
							<a data-slide="prev" href="#myCarousel" class="left carousel-control">‹</a>
							<a data-slide="next" href="#myCarousel" class="right carousel-control">›</a>
							</c:if>
						</div>
					</div>
				</div>
				</div>
			</div>
		</c:if>
		<div id="modal-gallery" class="modal modal-gallery hide fade modal-fullscreen">
			<div class="modal-header">
				<a class="close" data-dismiss="modal">&#215;</a>
			</div>
			<div class="modal-body">
				<div class="modal-image">
					<!--  -->
				</div>
				<div class="carousel-caption">
					<a class="modal-title">
						<!--  -->
					</a>
				</div>
			</div>
			<!--<div class="modal-footer">
				<a class="btn btn-primary modal-next">Next <i class="icon-arrow-right icon-white"></i></a>
				<a class="btn btn-info modal-prev"><i class="icon-arrow-left icon-white"></i> Previous</a>
				<a class="btn btn-success modal-play modal-slideshow" data-slideshow="2000"><i class="icon-play icon-white"></i> Slideshow</a>
				//<a class="btn modal-download" target="_blank"><i class="icon-download"></i> Download</a>
			</div>-->
		</div>

		<script type='text/javascript'>//<![CDATA[ 

// Generated by CoffeeScript 1.3.3

(function($) {
  var _next, _prev;
/* lets safely prototype the next/prev function to allow for this solution to withstand upgrades in TB
=====================================================*/
  _next = $.fn.carousel.Constructor.prototype.next;
  _prev = $.fn.carousel.Constructor.prototype.prev;
  $.fn.carousel.Constructor.prototype.next = function() {
    this.$element.trigger('pln.next');
    return _next.call(this);
  };
  $.fn.carousel.Constructor.prototype.prev = function() {
    this.$element.trigger('pln.prev');
    return _prev.call(this);
  };
/* in short we simply cloned the TB function and triggered our own custom event to allow us to bind in our own logic
    jQuery style
=====================================================*/
  $('div.carousel.jcarousel').each(function() { /* we are only interested in .jcarousel optioned carousel */
      /* create our variables safely in local scope */
      var item_width, stop_pos, total_items, total_width, visible_items, visible_width, _carousel, _slider;
   
      _carousel = $(this); /* lets jQuerify our carousel */
      /**
       * Gather some dimensions for our next/prev events to be able to calculate the correct carousel movements
       * total_items = the count how many items we have in the carousel window to move. 
       *                 Note: that we are counting the spanX in the carousel.
       * item_width = the width of the first spanX. We are going to assume that all items are created of equal width. 
       *                 (this could be extended to handle multiple widths but it would change the dynamics of the movement to more a per click algorithm instead of global on init like this)
       * total_width = the total width of the carousel items
       *                  (since our CSS uses an arbitary width on the .item.active in the carousel of 20000em we need to get the real dimensions to shrink it down to is actual size. 
       *                     If not the next/prev would not function correctly)
       * visible_items = how many items do we see at one time in our viewport
       * stop_pos = our viewport width will act as a stop position when we reach the last of the items that are visible
       * _slider = the jQuery object which we animate left/right as user clicks the next/prev. This is a performance variable since if we did not create it then you would have to $(..) the
       *             node at every click of next/prev. We also set the .data('to') property to 0 at this point since we want to prevent .animate queue mishaps of people rapidly clicking 
       *             either prev/next
       * 
       */
      total_items = _carousel.find('div[class^=span]').length;
      
      item_width = _carousel.find('div[class^=span]:first').outerWidth(true);
      
      total_width = item_width * total_items;
      
      _carousel.find('.item:first').width(total_width); // lets shrink the actual container to it's real size
    
      visible_items = Math.round(_carousel.find('.carousel-inner').width() / item_width);
    
      visible_width = visible_items * item_width;
    
      stop_pos = visible_width - total_width;
      
      _slider = _carousel.find('.item:first');
      
      _slider.data('to', 0);
     
    /* Event binding
     * ======================*/
    /* Since we have created our own events that get fired first and then return back to the Bootstrap Carousel original methods 
     *  we now have complete control of what happens when people click next/prev.. safely.
     */
     _carousel.carousel('pause').on({
          'pln.prev': function() { 
              /* Event: User has clicked prev ( wanting to go back and item )
               *  - we need to check a few things to ensure that we can indeed advance our carousel.
               *    1. Is the carousel back at the starting position ( .position().left < 0 )
               *    2. Since we animate we want to make sure the carousel is not animating or already in motion. 
               *             * Originally I did use the $(..).is(':animated') but since Twitter Bootstrap uses it's own $.Event method I was getting 
               *               some wierd results from that and chose to use my own logic for when the slider was not moving
               */
            if (_slider.position().left < 0 && _slider.position().left === _slider.data('to')) { 
              _slider.data('to', _slider.position().left + item_width); // lets set the .data('to') property to the final value so we can check if the carousel is at it's final destination before moving it again
              _slider.animate({
                left: "+=" + item_width + "px"
              }, 'fast'); // lets move the slider
            }
            return false;
          },
          /**
           * Same logic as pln.prev but the math is different cause we are going in the other direction
           */
          'pln.next': function() {
            if (_slider.position().left > stop_pos && _slider.position().left === _slider.data('to')) {
              _slider.data('to', _slider.position().left - item_width);
              _slider.animate({
                left: "-=" + item_width + "px"
              }, 'fast');
            }
            return false;
          }
        });
        
  });
  
})(jQuery);
//]]>  
		</script>
		
		<c:if test="${not empty taxon.images}">
			<div id="images" class="ad-gallery clearfix">
				<c:if test="${fn:length(taxon.images) == 1 }">
					<c:set value="no-display" var="cssClass"></c:set>
				</c:if>
				<div class="ad-controls ${cssClass}">&#160;</div>
				<div class="ad-nav ${cssClass} noPrint">
					<div class="ad-thumbs">
						<ul class="thumbnails ad-thumb-list thumbnail-gallery-padding">
							<c:forEach var="image" items="${taxon.images}" varStatus="status">
								<li>
									<a href="${image.url}"> <c:url var="thumbnail" value="/images/thumbnails/${image.identifier}.${image.format}" />
										<c:url var="url" value="/image/${image.identifier}" />
										<img src="${thumbnail}" class="thumbnail ${status.index}" title="${fn:escapeXml(image.caption)}" ad-href="${url}" />
									</a>
								</li>
							</c:forEach>
						</ul>
					</div>
				</div>
			</div>
			<noscript>
				<img src="${thumbnail}" class="thumbnail ${status.index}"
					title="${fn:escapeXml(image.caption)}" ad-href="${url}" />
			</noscript>
		</c:if>
		<br />
		<div id="status">
			<c:choose>
				<c:when test="${taxon.status == 'synonym' and taxon.accepted != null}">
					<spring:message code="isSynonym" />
					<c:url var="acceptedUrl" value="/taxon/${taxon.accepted.identifier}" />
					<a href="${acceptedUrl}">${taxon.accepted.name} ${taxon.accepted.authorship}</a>
				</c:when>
				<c:when test="${taxon.status == 'illegitimate' and taxon.accepted != null}">
					<spring:message code="isSynonym" />
					<c:url var="acceptedUrl" value="/taxon/${taxon.accepted.identifier}" />
					<a href="${acceptedUrl}">${taxon.accepted.name} ${taxon.accepted.authorship}</a>
				</c:when>
				<c:when test="${taxon.status == 'unplaced'}">
					<spring:message code="isUnplaced" />
				</c:when>
				<c:when test="${taxon.status == 'accepted'}">
					<spring:message code="isAccepted" />
					<c:url var="sourceUrl"
						value="/source/${taxon.authority.identifier}" />
					<a href="${sourceUrl}">${taxon.authority.title}</a>
				</c:when>
			</c:choose>
		</div>

		<div class="row">
			<div class="span8">
				<c:if test="${not empty em:allContent(taxon)}">
					<section id="textContent" class="section-box">
						<c:forEach var="feature" items="${em:features()}">
							<c:set var="content" value="${em:content(taxon,feature)}" />
							<c:if test="${content != null}">
								<div class="inner">
									<div id="${feature}" class="box clearfix">
										<div>
											<h2>
												<spring:message code="${feature}" />
											</h2>
										</div>
										<p class="justified">${content.content}</p>
										<c:if test="${not empty content.references }">
											<ul class="citations">
												<c:forEach var="reference" items="${content.references}">
													<li><a href="#${reference.identifier}">${em:citekey(bibliography,
															reference)}</a></li>
												</c:forEach>
											</ul>
										</c:if>
									</div>
								</div>
							</c:if>
						</c:forEach>
					</section>
				</c:if>

				<c:if test="${not empty em:regions(taxon)}">
					<section id="distribution.map" class="section-box">
						<div class="inner">
							<div class="box clearfix">
								<h2>
									<spring:message code="distribution.map" />
								</h2>
								<geo:map bounds="${em:boundingBox(taxon)}"
									mapClass="taxon-page-map">
									<c:if test="${em:hasLevel1Features(taxon)}">
										<geo:layer name="level1" layer="tdwg:level1" style="eMonocot"
											featureId="${em:getLevel1Features(taxon)}" />
									</c:if>
									<c:if test="${em:hasLevel2Features(taxon)}">
										<geo:layer name="level2" layer="tdwg:level2" style="eMonocot"
											featureId="${em:getLevel2Features(taxon)}" />
									</c:if>
									<c:if test="${em:hasLevel3Features(taxon)}">
										<geo:layer name="level3" layer="tdwg:level3" style="eMonocot"
											featureId="${em:getLevel3Features(taxon)}" />
									</c:if>
								</geo:map>

								<ul id="distribution-textual" class="paddingTop20">
									<c:forEach var="region" items="${em:regions(taxon)}">
										<li id="distribution-list">
											<spring:message code="${region}" />
										</li>
									</c:forEach>
								</ul>
							</div>
						</div>
					</section>
				</c:if>

				<c:if test="${not empty taxon.children}">
					<section id="children" class="section-box">
						<div class="inner">
							<div class="box clearfix">
								<h2>
									<spring:message code="children" />
								</h2>
								<ul class="unstyled">
									<c:forEach var="child" items="${em:sort(taxon.children)}">
										<li><jsp:element name="a">
												<jsp:attribute name="href">
													<c:url value="/taxon/${child.identifier}" />
												</jsp:attribute>
												${child.name} ${child.authorship}
											</jsp:element></li>
									</c:forEach>
								</ul>
							</div>
						</div>
					</section>
				</c:if>

				<c:if test="${not empty taxon.synonyms}">
					<section id="synonyms" class="section-box">
						<div class="inner">
							<div class="box clearfix">
								<h2>
									<spring:message code="synonyms" />
								</h2>
								<ul class="unstyled">
									<c:forEach var="synonym" items="${em:sort(taxon.synonyms)}">
										<li>
											<jsp:element name="a">
												<jsp:attribute name="href">
													<c:url value="/taxon/${synonym.identifier}" />
												</jsp:attribute>
												${synonym.name} ${synonym.authorship}
											</jsp:element>
										</li>
									</c:forEach>
								</ul>
							</div>
						</div>
					</section>
				</c:if>
				<section id="sources" class="section-box">
					<div class="inner">
						<div class="box clearfix">
							<h2>
								<spring:message code="sources" />
							</h2>
							<ul>
								<c:forEach var="source" items="${taxon.sources}">
									<li>
										<jsp:element name="a">
											<jsp:attribute name="href">
												<c:url value="/source/${source.identifier}" />
											</jsp:attribute>
											${source.title}
										</jsp:element>
									</li>
								</c:forEach>
							</ul>
						</div>
					</div>
				</section>
				<c:if test="${not empty bibliography.references}">
					<section id="bibliography" class="section-box">
						<div class="inner">
							<div class="box clearfix">
								<h2>
									<spring:message code="bibliography" />
								</h2>
								<ul>
									<c:forEach var="reference" items="${bibliography.references}">
										<li>
											<a id="${reference.identifier}">${em:citekey(bibliography,reference)}</a>
											<c:choose>
												<c:when test="${not empty reference.citation}">
													${reference.citation}
												</c:when>
												<c:otherwise>
													<!-- Construct reference ourselves -->
													${reference.author}<c:if
														test="${not empty reference.datePublished}"> (${reference.datePublished})</c:if>. ${reference.title}<c:if
														test="${not empty reference.publishedInAuthor}"> ${reference.publishedInAuthor}</c:if>
													<c:if test="${not empty reference.publishedIn}"> ${reference.publishedIn}</c:if>
													<c:if test="${not empty reference.volume}"> ${reference.volume}</c:if>
													<c:if test="${not empty reference.pages}">: ${reference.pages}</c:if>. <c:if
														test="${not empty reference.publisher}">${reference.publisher}.</c:if>
												</c:otherwise>
											</c:choose>
										</li>
									</c:forEach>
								</ul>
							</div>
						</div>
					</section>
				</c:if>
			</div>

			<div id="sidebar" class="span4 sidebar">
				<div class="inner">
					<c:if test="${taxon.accepted == null}">
						<div id="classificationBox" class="box">
							<section id="taxonomicTree">
								<h2>
									<spring:message code="taxonomicTree" />
								</h2>
								<ul id="taxonHierarchy">
									<c:if test="${not empty taxon.ancestors}">
										<tags:tree taxon="${taxon}" ancestors="${taxon.ancestors}" />
									</c:if>
								</ul>
							</section>
						</div>
                    </c:if>
				</div>
			</div>
		</div>
	</div>
</div>