hibernate.dialect=${hibernate.dialect}
hibernate.search.default.indexBase=${hibernate.search.default.indexBase}
hibernate.search.default.sourceBase=${hibernate.search.default.sourceBase}
hibernate.search.default.refresh=${hibernate.search.default.refresh}
hibernate.search.worker.backend=${hibernate.search.worker.backend}
hibernate.search.default.directory_provider=${hibernate.search.default.directory_provider}
hibernate.search.purge.indexes.on.init=${hibernate.search.purge.indexes.on.init}
mondrian.url=jdbc:mondrian:Jdbc=${jdbc.driver.url};Catalog=${mondrian.catalog.location};JdbcUser=${jdbc.driver.username};JdbcPassword=${jdbc.driver.password};JdbcDrivers=${jdbc.driver.classname};
jdbc.driver.classname=${jdbc.driver.classname}
jdbc.driver.url=${jdbc.driver.url}?useUnicode=true&characterEncoding=utf-8&useCursorFetch=true&useServerPrepStmts=true
jdbc.driver.username=${jdbc.driver.username}
jdbc.driver.password=${jdbc.driver.password}
spring.security.sid.identity.query=${spring.security.sid.identity.query}
spring.security.class.identity.query=${spring.security.class.identity.query}
checklistWebserviceController.baseURL=${portal.baseUrl}endpoint
checklistWebserviceController.serviceName=World Checklist System: Taxon Extractor Service
checklistWebserviceController.serviceDescription=This Checklist gives information on the accepted scientific names and synonyms of selected plant families.
checklistWebserviceController.serviceUrl=http://apps.kew.org/wcsp/home.do
taxonDaoImpl.rootRank=ORDER
amq.broker.uri=${amq.broker.uri}
amq.broker.name=${amq.broker.name}
amq.connectionFactory.jndi_name=${amq.connectionFactory.jndi_name}
amq.queue.jndi_name=${amq.queue.jndi_name}
amq.queue.physical_name=${amq.queue.physical_name}
logging.location=${logging.location}
logging.level=${logging.level}
logging.method=${logging.method}
harvester.jobRequests.url=${harvester.jobRequests.url}
portalWebservice.harvester.username=${portalWebservice.harvester.username}
portalWebservice.harvester.password=${portalWebservice.harvester.password}
http.proxyHost=${http.proxyHost}
http.proxyPort=${http.proxyPort}
